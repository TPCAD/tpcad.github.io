<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Operating System on Eulamber</title>
    <link>https://tpcad.github.io/tags/operating-system/</link>
    <description>Recent content in Operating System on Eulamber</description>
    <generator>Hugo -- 0.144.0</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 21 Oct 2024 08:25:27 +0800</lastBuildDate>
    <atom:link href="https://tpcad.github.io/tags/operating-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>进程基础</title>
      <link>https://tpcad.github.io/posts/os_process_basic/</link>
      <pubDate>Mon, 21 Oct 2024 08:25:27 +0800</pubDate>
      <guid>https://tpcad.github.io/posts/os_process_basic/</guid>
      <description>&lt;h2 id=&#34;进程&#34;&gt;进程&lt;/h2&gt;
&lt;h3 id=&#34;进程的状态&#34;&gt;进程的状态&lt;/h3&gt;
&lt;p&gt;一个进程至少有三种基本状态，即就绪、运行、阻塞状态。&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;stateDiagram-v2
    Ready --&gt; Running
    Running --&gt; Ready
    Running --&gt; Blocked
    Blocked --&gt; Ready
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;就绪状态（Ready）：获得时间片后即可运行&lt;/li&gt;
&lt;li&gt;运行状态（Running）：运行状态，进程正在占用 CPU&lt;/li&gt;
&lt;li&gt;阻塞状态（Blocked）：进程正在等待某一事件发生，即使拥有 CPU 也无法运行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三种状态之间会因为以下原因发生切换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;就绪状态 -&amp;gt; 运行状态&lt;/em&gt;：被调度程序选中，获得时间片，开始运行&lt;/li&gt;
&lt;li&gt;&lt;em&gt;运行状态 -&amp;gt; 就绪状态&lt;/em&gt;：时间片用完&lt;/li&gt;
&lt;li&gt;&lt;em&gt;运行状态 -&amp;gt; 阻塞状态&lt;/em&gt;：进程请求某个事件且必须等待，如 I/O 事件&lt;/li&gt;
&lt;li&gt;&lt;em&gt;阻塞状态 -&amp;gt; 就绪状态&lt;/em&gt;：进程请求的事件发生&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了以上三种状态外，进程还有两种基本的状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建状态（New）：进程正在被创建时的状态&lt;/li&gt;
&lt;li&gt;结束状态（Exit）：进程结束时的状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外，当进程被阻塞时，可以将该进程相关的内存换出到磁盘中，这种进程存在但没有占据实际物理内存的状态称为「挂起状态」。挂起状态又可以分为 &lt;strong&gt;就绪挂起状态&lt;/strong&gt; 和 &lt;strong&gt;阻塞挂起状态&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;进程控制块&#34;&gt;进程控制块&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;进程控制块&lt;/strong&gt;（Process Control Block，PCB）是用来进程的数据结构，每个进程对应一个 PCB，PCB 是进程存在的唯一标识。&lt;/p&gt;
&lt;p&gt;PCB 通常包含以下信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进程描述信息：
&lt;ul&gt;
&lt;li&gt;进程标识符：每个进程都有一个唯一的标识符&lt;/li&gt;
&lt;li&gt;用户标识符：进程所属用户&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进程控制、管理信息：
&lt;ul&gt;
&lt;li&gt;进程状态：进程当前状态&lt;/li&gt;
&lt;li&gt;进程优先级：进程调度时的优先级&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分配的资源
&lt;ul&gt;
&lt;li&gt;进程虚拟地址空间&lt;/li&gt;
&lt;li&gt;进程打开的文件列表&lt;/li&gt;
&lt;li&gt;I/O 设备&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CPU 信息
&lt;ul&gt;
&lt;li&gt;寄存器的值，如 &lt;code&gt;eip&lt;/code&gt;，&lt;code&gt;esp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;线程&#34;&gt;线程&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;线程&lt;/strong&gt; 是进程当中的一条执行流程。当进程只有一个线程时，可以认为进程就是线程。&lt;/p&gt;
&lt;p&gt;线程与进程十分相似，同样拥有就绪、运行、阻塞等状态，也通过 TCB（Thread Control Block）描述。线程共享进程的数据段、代码段、文件等资源，只独享寄存器、栈等资源。进程是资源分配的基本单位，线程是调度的基本单位。&lt;/p&gt;</description>
    </item>
    <item>
      <title>虚拟内存</title>
      <link>https://tpcad.github.io/posts/os_virtual_memory/</link>
      <pubDate>Sun, 20 Oct 2024 09:59:27 +0800</pubDate>
      <guid>https://tpcad.github.io/posts/os_virtual_memory/</guid>
      <description>&lt;p&gt;为了隔离不同进程所使用的地址，操作系统为每个进程分配了一套 &lt;strong&gt;虚拟地址&lt;/strong&gt;。各个进程的虚拟内存互相独立，互不干扰，同时，进程也不允许直接访问物理地址。虚拟内存可以让程序访问超出物理内存大小的地址。在 32 位处理器中，虚拟内存的大小为 &lt;code&gt;4 GB（2^32）&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;分页&#34;&gt;分页&lt;/h2&gt;
&lt;p&gt;分页机制将虚拟内存分为一个个大小固定的单元，称为 &lt;strong&gt;页（Page）&lt;/strong&gt;。同样的，也将物理内存分为一个个 &lt;strong&gt;页框（Page Frame）&lt;/strong&gt;。页和页框的大小相等，通常为 &lt;strong&gt;4 KB&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;页表&#34;&gt;页表&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;页表&lt;/strong&gt; 的作用是把页 &lt;strong&gt;映射&lt;/strong&gt; 为页框。从数学角度说，页表是一个函数，它的参数是虚拟页号，结果是物理页框号。&lt;/p&gt;
&lt;p&gt;每一个进程都有自己的页表，页表也存储在内存中，是一个由页表项组成的数组。&lt;/p&gt;
&lt;h4 id=&#34;页表项&#34;&gt;页表项&lt;/h4&gt;
&lt;p&gt;在 32 位操作系统中，一个页表项的大小为 4 字节。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ca9ee6&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#ca9ee6&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;page_entry_t&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;present&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;  &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 在内存中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;write&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;    &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 0 只读，1 可读可写
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;user&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;     &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 1 所有人，0 超级用户 DPL &amp;lt; 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;pwt&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;      &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// page write through，1 直写模式，0 回写模式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;pcd&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;      &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// page cache disable，禁止该页缓冲
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;accessed&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 被访问过，用于统计使用频率
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;dirty&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;    &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 脏页，表示该页缓冲被写过
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;pat&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;      &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// page attribute table，页大小 4K / 4M
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;global&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;1&lt;/span&gt;;   &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 全局，所有进程都会用到了，该页不刷新缓冲
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u8 &lt;span style=&#34;color:#99d1db&#34;&gt;ignored&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;3&lt;/span&gt;;  &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 操作系统决定是否使用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;    u32 &lt;span style=&#34;color:#99d1db&#34;&gt;index&lt;/span&gt; : &lt;span style=&#34;color:#ef9f76&#34;&gt;20&lt;/span&gt;;  &lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;// 页索引
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#737994;font-style:italic&#34;&gt;&lt;/span&gt;} _packed &lt;span style=&#34;color:#e78284&#34;&gt;page_entry_t&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;地址转换&#34;&gt;地址转换&lt;/h4&gt;
&lt;p&gt;在 32 位操作系统中，虚拟内存大小为 4 GB（$2^{32}$），页面大小通常为 4 KB。由此可知，虚拟内存被划分为 1 M（$2^{20}$） 个页面。因此，32 位的虚拟地址中前 20 位表示页索引，剩下 12 位则表示页内偏移量。利用页索引在页表中查找到对应的页框号后，将其与页内偏移量相加即可得到物理地址。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
